webpackJsonp([28],{

/***/ 33:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(332)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, Marionette, $, controller_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var app = new Marionette.Application();
    app.once("start", function () {
        new controller_1.default().render();
    });
    $(function () {
        app.start();
    });
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 332:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, $, Marionette, decorators_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ViewController = (function (_super) {
        __extends(ViewController, _super);
        function ViewController() {
            return _super.call(this) || this;
        }
        ViewController_1 = ViewController;
        ViewController.prototype.onRender = function () {
            console.log("pinned nav appcontroller rendered");
            this.scrollPositionCheck();
        };
        ViewController.prototype.closeAllDrawers = function () {
            this.ui.mainNavAccordionDrawers.collapse("hide");
        };
        ViewController.prototype.scrollPositionCheck = function () {
            var _this = this;
            var isOffScreen = null;
            var wasOffScreen = null;
            var currentScrollPositionY = $(window).scrollTop();
            if (currentScrollPositionY > ViewController_1.PINNED_NAV_VERT_THRESHOLD) {
                isOffScreen = true;
            }
            else {
                isOffScreen = false;
            }
            if (isOffScreen === true) {
                this.pinAnchorNav();
            }
            else {
                this.unpinAnchorNav();
            }
            wasOffScreen = isOffScreen;
            $(window).scroll(function () {
                var currentScrollPositionY = $(window).scrollTop();
                if (currentScrollPositionY > ViewController_1.PINNED_NAV_VERT_THRESHOLD) {
                    isOffScreen = true;
                }
                else {
                    isOffScreen = false;
                }
                if (isOffScreen !== wasOffScreen) {
                    if (isOffScreen === true) {
                        _this.pinAnchorNav();
                    }
                    else {
                        _this.unpinAnchorNav();
                    }
                    wasOffScreen = isOffScreen;
                }
            });
        };
        ViewController.prototype.pinAnchorNav = function () {
            this.ui.anchorNav.addClass("pinned");
        };
        ViewController.prototype.unpinAnchorNav = function () {
            this.ui.anchorNav.removeClass("pinned");
            this.closeAllDrawers();
        };
        var ViewController_1;
        ViewController.PINNED_NAV_VERT_THRESHOLD = 300;
        ViewController.BREAKPOINT_NAV_SWAP = 1200;
        ViewController = ViewController_1 = __decorate([
            decorators_1.Options({
                template: false,
                el: ".js-nav-pinned-wrap",
                ui: {
                    anchorNav: ".js-nav-pinned",
                    mainNavAccordionDrawers: ".js-subnav-wrap.collapse"
                }
            })
        ], ViewController);
        return ViewController;
    }(Marionette.View));
    exports.default = ViewController;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(33);


/***/ })

},[73]);
//# sourceMappingURL=nav-pinned.js.map